{"version":3,"sources":["webpack:///webpack/bootstrap 56fff296395f2f8043e8","webpack:///./src/worker/Worker.js","webpack:///./src/util/index.js","webpack:///./src/util/constants.js","webpack:///./src/util/SearchUtility.js","webpack:///./src/util/SearchIndex.js"],"names":[],"mappings":"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","file":"56fff296395f2f8043e8.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 56fff296395f2f8043e8","import SearchUtility from '../util'\n\n/**\n * Search entry point to web worker.\n * Builds search index and performs searches on separate thread from the ui.\n */\n\nconst searchUtility = new SearchUtility()\n\nself.addEventListener('message', event => {\n  const { data } = event\n  const { method } = data\n\n  switch (method) {\n    case 'indexDocument':\n      const { uid, text } = data\n\n      searchUtility.indexDocument(uid, text)\n      break\n    case 'search':\n      const { callbackId, query } = data\n\n      const results = searchUtility.search(query)\n\n      self.postMessage({ callbackId, results })\n      break\n    case 'setIndexMode':\n      const { indexMode } = data\n\n      searchUtility.setIndexMode(indexMode)\n      break\n  }\n}, false)\n\n\n\n// WEBPACK FOOTER //\n// ./src/worker/Worker.js","export default from './SearchUtility'\nexport { INDEX_MODES } from './constants'\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/index.js","export const INDEX_MODES = {\n  // Indexes for all substring searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", \"cat\", \"a\", \"at\", and \"t\").\n  // Based on 'all-substrings-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/all-substrings-index-strategy.ts\n  ALL_SUBSTRINGS: 'ALL_SUBSTRINGS',\n\n  // Indexes for exact word matches only.\n  // Based on 'exact-word-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/exact-word-index-strategy.ts\n  EXACT_WORDS: 'EXACT_WORDS',\n\n  // Indexes for prefix searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", and \"cat\" allowing prefix search lookups).\n  // Based on 'prefix-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/prefix-index-strategy.ts\n  PREFIXES: 'PREFIXES'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/constants.js","import { INDEX_MODES } from './constants'\nimport SearchIndex from './SearchIndex'\n\n/**\n * Synchronous client-side full-text search utility.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchUtility {\n\n  /**\n   * Constructor.\n   *\n   * @param indexMode See #setIndexMode\n   */\n  constructor ({\n    indexMode = INDEX_MODES.ALL_SUBSTRINGS\n  } = {}) {\n    this._indexMode = indexMode\n\n    this.searchIndex = new SearchIndex()\n    this.uids = {}\n  }\n\n  /**\n   * Returns a constant representing the current index mode.\n   */\n  getIndexMode (): string {\n    return this._indexMode\n  }\n\n  /**\n   * Adds or updates a uid in the search index and associates it with the specified text.\n   * Note that at this time uids can only be added or updated in the index, not removed.\n   *\n   * @param uid Uniquely identifies a searchable object\n   * @param text Text to associate with uid\n   */\n  indexDocument (uid: any, text: string): SearchUtility {\n    this.uids[uid] = true\n\n    var fieldTokens: Array<string> = this._tokenize(this._sanitize(text))\n\n    fieldTokens.forEach(fieldToken => {\n      var expandedTokens: Array<string> = this._expandToken(fieldToken)\n\n      expandedTokens.forEach(expandedToken => {\n        this.searchIndex.indexDocument(expandedToken, uid)\n      })\n    })\n\n    return this\n  }\n\n  /**\n   * Searches the current index for the specified query text.\n   * Only uids matching all of the words within the text will be accepted.\n   * If an empty query string is provided all indexed uids will be returned.\n   *\n   * Document searches are case-insensitive (e.g. \"search\" will match \"Search\").\n   * Document searches use substring matching (e.g. \"na\" and \"me\" will both match \"name\").\n   *\n   * @param query Searchable query text\n   * @return Array of uids\n   */\n  search (query: string): Array<any> {\n    if (!query) {\n      return Object.keys(this.uids)\n    } else {\n      var tokens: Array<string> = this._tokenize(this._sanitize(query))\n\n      return this.searchIndex.search(tokens)\n    }\n  }\n\n  /**\n   * Sets a new index mode.\n   * See util/constants/INDEX_MODES\n   */\n  setIndexMode (indexMode: string): void {\n    if (Object.keys(this.uids).length > 0) {\n      throw Error('indexMode cannot be changed once documents have been indexed')\n    }\n\n    this._indexMode = indexMode\n  }\n\n  /**\n   * Index strategy based on 'all-substrings-index-strategy.ts' in github.com/bvaughn/js-search/\n   *\n   * @private\n   */\n  _expandToken (token: string): Array<string> {\n    switch (this._indexMode) {\n      case INDEX_MODES.EXACT_WORDS:\n        return [token]\n      case INDEX_MODES.PREFIXES:\n        return this._expandPrefixTokens(token)\n      case INDEX_MODES.ALL_SUBSTRINGS:\n      default:\n        return this._expandAllSubstringTokens(token)\n    }\n  }\n\n  _expandAllSubstringTokens (token: string): Array<string> {\n    const expandedTokens = []\n\n    // String.prototype.charAt() may return surrogate halves instead of whole characters.\n    // When this happens in the context of a web-worker it can cause Chrome to crash.\n    // Catching the error is a simple solution for now; in the future I may try to better support non-BMP characters.\n    // Resources:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\n    // https://mathiasbynens.be/notes/javascript-unicode\n    try {\n      for (let i = 0, length = token.length; i < length; ++i) {\n        let substring: string = ''\n\n        for (let j = i; j < length; ++j) {\n          substring += token.charAt(j)\n          expandedTokens.push(substring)\n        }\n      }\n    } catch (error) {\n      console.error(`Unable to parse token \"${token}\" ${error}`)\n    }\n\n    return expandedTokens\n  }\n\n  _expandPrefixTokens (token: string): Array<string> {\n    const expandedTokens = []\n\n    // String.prototype.charAt() may return surrogate halves instead of whole characters.\n    // When this happens in the context of a web-worker it can cause Chrome to crash.\n    // Catching the error is a simple solution for now; in the future I may try to better support non-BMP characters.\n    // Resources:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\n    // https://mathiasbynens.be/notes/javascript-unicode\n    try {\n      for (let i = 0, length = token.length; i < length; ++i) {\n        expandedTokens.push(token.substr(0, i + 1))\n      }\n    } catch (error) {\n      console.error(`Unable to parse token \"${token}\" ${error}`)\n    }\n\n    return expandedTokens\n  }\n\n  /**\n   * @private\n   */\n  _sanitize (string: string): string {\n    return string.trim().toLocaleLowerCase()\n  }\n\n  /**\n   * @private\n   */\n  _tokenize (text: string): Array<string> {\n    return text\n      .split(/\\s+/)\n      .filter(text => text) // Remove empty tokens\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/SearchUtility.js","/**\n * Maps search tokens to uids.\n * This structure is used by the Search class to optimize search operations.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchIndex {\n  tokenToUidMap: { [token: string]: any }\n\n  constructor () {\n    this.tokenToUidMap = {}\n  }\n\n  /**\n   * Maps the specified token to a uid.\n   *\n   * @param token Searchable token (e.g. \"road\")\n   * @param uid Identifies a document within the searchable corpus\n   */\n  indexDocument (token: string, uid: any): void {\n    if (!this.tokenToUidMap[token]) {\n      this.tokenToUidMap[token] = {}\n    }\n\n    this.tokenToUidMap[token][uid] = uid\n  }\n\n  /**\n   * Finds uids that have been mapped to the set of tokens specified.\n   * Only uids that have been mapped to all tokens will be returned.\n   *\n   * @param tokens Array of searchable tokens (e.g. [\"long\", \"road\"])\n   * @return Array of uids that have been associated with the set of search tokens\n   */\n  search (tokens: Array<string>): Array<any> {\n    let uidMap: {[uid: any]: any} = {}\n    let initialized = false\n\n    tokens.forEach(token => {\n      let currentUidMap: {[uid: any]: any} = this.tokenToUidMap[token] || {}\n\n      if (!initialized) {\n        initialized = true\n\n        for (let uid in currentUidMap) {\n          uidMap[uid] = currentUidMap[uid]\n        }\n      } else {\n        for (let uid in uidMap) {\n          if (!currentUidMap[uid]) {\n            delete uidMap[uid]\n          }\n        }\n      }\n    })\n\n    let uids: Array<any> = []\n\n    for (let uid in uidMap) {\n      uids.push(uidMap[uid])\n    }\n\n    return uids\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/SearchIndex.js"],"sourceRoot":""}