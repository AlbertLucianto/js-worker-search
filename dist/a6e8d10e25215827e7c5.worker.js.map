{"version":3,"sources":["webpack:///webpack/bootstrap a6e8d10e25215827e7c5","webpack:///./src/worker/Worker.js","webpack:///./src/util/index.js","webpack:///./src/util/constants.js","webpack:///./src/util/SearchUtility.js","webpack:///./src/util/SearchIndex.js"],"names":[],"mappings":"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","file":"a6e8d10e25215827e7c5.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a6e8d10e25215827e7c5\n **/","import SearchUtility from '../util'\n\n/**\n * Search entry point to web worker.\n * Builds search index and performs searches on separate thread from the ui.\n */\n\nconst searchUtility = new SearchUtility()\n\nself.addEventListener('message', event => {\n  const { data } = event\n  const { method } = data\n\n  switch (method) {\n    case 'indexDocument':\n      const { uid, text } = data\n\n      searchUtility.indexDocument(uid, text)\n      break\n    case 'search':\n      const { callbackId, query } = data\n\n      const results = searchUtility.search(query)\n\n      self.postMessage({ callbackId, results })\n      break\n    case 'setIndexMode':\n      const { indexMode } = data\n\n      searchUtility.setIndexMode(indexMode)\n      break\n  }\n}, false)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/worker/Worker.js\n **/","export default from './SearchUtility'\nexport { INDEX_MODES } from './constants'\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/index.js\n **/","export const INDEX_MODES = {\n  // Indexes for all substring searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", \"cat\", \"a\", \"at\", and \"t\").\n  // Based on 'all-substrings-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/all-substrings-index-strategy.ts\n  ALL_SUBSTRINGS: 'ALL_SUBSTRINGS',\n\n  // Indexes for exact word matches only.\n  // Based on 'exact-word-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/exact-word-index-strategy.ts\n  EXACT_WORDS: 'EXACT_WORDS',\n\n  // Indexes for prefix searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", and \"cat\" allowing prefix search lookups).\n  // Based on 'prefix-index-strategy' from js-search;\n  // github.com/bvaughn/js-search/blob/master/source/index-strategy/prefix-index-strategy.ts\n  PREFIXES: 'PREFIXES'\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/constants.js\n **/","import { INDEX_MODES } from './constants'\nimport SearchIndex from './SearchIndex'\n\n/**\n * Synchronous client-side full-text search utility.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchUtility {\n\n  /**\n   * Constructor.\n   *\n   * @param indexMode See #setIndexMode\n   */\n  constructor ({\n    indexMode = INDEX_MODES.ALL_SUBSTRINGS\n  } = {}) {\n    this._indexMode = indexMode\n\n    this.searchIndex = new SearchIndex()\n    this.uids = {}\n  }\n\n  /**\n   * Returns a constant representing the current index mode.\n   */\n  getIndexMode (): string {\n    return this._indexMode\n  }\n\n  /**\n   * Adds or updates a uid in the search index and associates it with the specified text.\n   * Note that at this time uids can only be added or updated in the index, not removed.\n   *\n   * @param uid Uniquely identifies a searchable object\n   * @param text Text to associate with uid\n   */\n  indexDocument (uid: any, text: string): SearchUtility {\n    this.uids[uid] = true\n\n    var fieldTokens: Array<string> = this._tokenize(this._sanitize(text))\n\n    for (let fieldToken of fieldTokens) {\n      var expandedTokens: Array<string> = this._expandToken(fieldToken)\n\n      for (let expandedToken of expandedTokens) {\n        this.searchIndex.indexDocument(expandedToken, uid)\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Searches the current index for the specified query text.\n   * Only uids matching all of the words within the text will be accepted.\n   * If an empty query string is provided all indexed uids will be returned.\n   *\n   * Document searches are case-insensitive (e.g. \"search\" will match \"Search\").\n   * Document searches use substring matching (e.g. \"na\" and \"me\" will both match \"name\").\n   *\n   * @param query Searchable query text\n   * @return Array of uids\n   */\n  search (query: string): Array<any> {\n    if (!query) {\n      return Object.keys(this.uids)\n    } else {\n      var tokens: Array<string> = this._tokenize(this._sanitize(query))\n\n      return this.searchIndex.search(tokens)\n    }\n  }\n\n  /**\n   * Sets a new index mode.\n   * See util/constants/INDEX_MODES\n   */\n  setIndexMode (indexMode: string): void {\n    if (Object.keys(this.uids).length > 0) {\n      throw Error('indexMode cannot be changed once documents have been indexed')\n    }\n\n    this._indexMode = indexMode\n  }\n\n  /**\n   * Index strategy based on 'all-substrings-index-strategy.ts' in github.com/bvaughn/js-search/\n   *\n   * @private\n   */\n  _expandToken (token: string): Array<string> {\n    switch (this._indexMode) {\n      case INDEX_MODES.EXACT_WORDS:\n        return [token]\n      case INDEX_MODES.PREFIXES:\n        return this._expandPrefixTokens(token)\n      case INDEX_MODES.ALL_SUBSTRINGS:\n      default:\n        return this._expandAllSubstringTokens(token)\n    }\n  }\n\n  _expandAllSubstringTokens (token: string): Array<string> {\n    const expandedTokens = []\n\n    // String.prototype.charAt() may return surrogate halves instead of whole characters.\n    // When this happens in the context of a web-worker it can cause Chrome to crash.\n    // Catching the error is a simple solution for now; in the future I may try to better support non-BMP characters.\n    // Resources:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\n    // https://mathiasbynens.be/notes/javascript-unicode\n    try {\n      for (let i = 0, length = token.length; i < length; ++i) {\n        let substring: string = ''\n\n        for (let j = i; j < length; ++j) {\n          substring += token.charAt(j)\n          expandedTokens.push(substring)\n        }\n      }\n    } catch (error) {\n      console.error(`Unable to parse token \"${token}\" ${error}`)\n    }\n\n    return expandedTokens\n  }\n\n  _expandPrefixTokens (token: string): Array<string> {\n    const expandedTokens = []\n\n    // String.prototype.charAt() may return surrogate halves instead of whole characters.\n    // When this happens in the context of a web-worker it can cause Chrome to crash.\n    // Catching the error is a simple solution for now; in the future I may try to better support non-BMP characters.\n    // Resources:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\n    // https://mathiasbynens.be/notes/javascript-unicode\n    try {\n      for (let i = 0, length = token.length; i < length; ++i) {\n        expandedTokens.push(token.substr(0, i + 1))\n      }\n    } catch (error) {\n      console.error(`Unable to parse token \"${token}\" ${error}`)\n    }\n\n    return expandedTokens\n  }\n\n  /**\n   * @private\n   */\n  _sanitize (string: string): string {\n    return string.trim().toLocaleLowerCase()\n  }\n\n  /**\n   * @private\n   */\n  _tokenize (text: string): Array<string> {\n    return text\n      .split(/\\s+/)\n      .filter(text => text) // Remove empty tokens\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/SearchUtility.js\n **/","/**\n * Maps search tokens to uids.\n * This structure is used by the Search class to optimize search operations.\n * Forked from JS search (github.com/bvaughn/js-search).\n */\nexport default class SearchIndex {\n  tokenToUidMap: { [token: string]: any }\n\n  constructor () {\n    this.tokenToUidMap = {}\n  }\n\n  /**\n   * Maps the specified token to a uid.\n   *\n   * @param token Searchable token (e.g. \"road\")\n   * @param uid Identifies a document within the searchable corpus\n   */\n  indexDocument (token: string, uid: any): void {\n    if (!this.tokenToUidMap[token]) {\n      this.tokenToUidMap[token] = {}\n    }\n\n    this.tokenToUidMap[token][uid] = uid\n  }\n\n  /**\n   * Finds uids that have been mapped to the set of tokens specified.\n   * Only uids that have been mapped to all tokens will be returned.\n   *\n   * @param tokens Array of searchable tokens (e.g. [\"long\", \"road\"])\n   * @return Array of uids that have been associated with the set of search tokens\n   */\n  search (tokens: Array<string>): Array<any> {\n    let uidMap: {[uid: any]: any} = {}\n    let initialized = false\n\n    for (let token of tokens) {\n      let currentUidMap: {[uid: any]: any} = this.tokenToUidMap[token] || {}\n\n      if (!initialized) {\n        initialized = true\n\n        for (let uid in currentUidMap) {\n          uidMap[uid] = currentUidMap[uid]\n        }\n      } else {\n        for (let uid in uidMap) {\n          if (!currentUidMap[uid]) {\n            delete uidMap[uid]\n          }\n        }\n      }\n    }\n\n    let uids: Array<any> = []\n\n    for (let uid in uidMap) {\n      uids.push(uidMap[uid])\n    }\n\n    return uids\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/SearchIndex.js\n **/"],"sourceRoot":""}